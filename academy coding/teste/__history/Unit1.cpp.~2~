//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
#include <IdMessageBuilder.hpp>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "IdbaseComponent"
#pragma link "IdComponent"
#pragma link "IdExplicitTLSClientSeverBase"
#pragma link "IdIOHandler"
#pragma link "IdIOHandlerSocket"
#pragma link "IdIOHandlerStack"
#pragma link "IdMessage"
#pragma link "IdMessageClient"
#pragma link "IdSMTP"
#pragma link "IdSMTPBase"
#pragma link "IdSSL"
#pragma link "IdSSLOpenSSL"
#pragma link "IdTCPClient"
#pragma link "IdTCPConnection"
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
 IdSMTP1->Host= smtp.gmail.com;
 IdSMTP1->Username= gianlucaslucenabenhos@gmail.com;
 IdSMTP1->Password= lucenabenhos;

 IdMessage1->Clear();
 IdMessage1->Recipients->EMailAddressea=gianbenhos@gmail.com;
 IdMessage1->Subject=teste;
 IdMessage1->Sody->Text= testando email;

 TIdMessageBuilderPlain* MyMessage= new TIdMessageBuilderPlain();
 if(LAttachment-Items->Couunt>0){
 for(int i=0; i< LAttachment->Items->Count; i++)
 MyMessage->PlainText-Text=Mbody->Text;
 MyMessage->FillMessage(IdMessage);
 }

 try{
 IdSMTP->Connect();
 IdSMTP->Send(IdMessage1);
 }

 catch(...){
  ShowMessage("error...");
 }

 IdSMTP->Disconnect();
 delete MyMessage;
 }

//---------------------------------------------------------------------------
